{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","class","s","profile","description","src","alt","label","quantity","defaultProps","Statistics","title","className","statistics","statList","map","id","percentage","color","item","style","backgroundColor","FriendList","friends","friendlist","status","isOnline","width","TransactionHistory","items","transTable","table","tableBody","string","type","amount","currency","tableData","toUpperCase","slice","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28e594d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1WoRZ\",\"description\":\"Profile_description__1rgA9\",\"avatar\":\"Profile_avatar__ymiCf\",\"name\":\"Profile_name__1-Azx\",\"tag\":\"Profile_tag__324Gd\",\"location\":\"Profile_location__Ty-No\",\"stats\":\"Profile_stats__29njy\",\"quantity\":\"Profile_quantity__3klkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3LjXT\",\"title\":\"Statistics_title__3Wnkj\",\"statList\":\"Statistics_statList__1Ywfo\",\"item\":\"Statistics_item__1CMcS\",\"label\":\"Statistics_label__1F6yu\",\"percentage\":\"Statistics_percentage__ejE5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendList_friends__3rKRY\",\"friendlist\":\"FriendList_friendlist__1UCow\",\"item\":\"FriendList_item__2STA_\",\"avatar\":\"FriendList_avatar__3ioxv\",\"status\":\"FriendList_status__3c8Et\",\"name\":\"FriendList_name__dIEQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transTable\":\"TransactionHistory_transTable__1b1qm\"};","import s from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <div class={s.profile}>\n      <div class={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" class={s.avatar} />\n        <p class={s.name}>{name}</p>\n        <p class={s.tag}>@{tag}</p>\n        <p class={s.location}>{location}</p>\n      </div>\n      <ul class={s.stats}>\n        <li>\n          <span class={s.label}>Followers</span>\n          <span class={s.quantity}>{followers}</span>\n        </li>\n        <li>\n          <span class={s.label}>Views</span>\n          <span class={s.quantity}>{views}</span>\n        </li>\n        <li>\n          <span class={s.label}>Likes</span>\n          <span class={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nProfile.defaultProps = {\n  name: 'User name',\n  tag: '@User tag',\n  location: 'User location',\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg',\n  stats: {\n    followers: '0',\n    views: '0',\n    likes: '0',\n  },\n};\n\nexport default Profile;\n","import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\n\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      <h2 class={s.title}>{title}</h2>\n      <ul class={s.statList}>\n        {stats.map(({ id, label, percentage, color }) => (\n          <li\n            key={id}\n            class={s.item}\n            style={{ backgroundColor: color }}\n          >\n            <span class={s.label}>{label}</span>\n            <span class={s.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nStatistics.defaultProps = {\n  title: '',\n  label: 'format',\n};\n\nexport default Statistics;\n","import s from './FriendList.module.css';\nimport PropTypes from 'prop-types';\n\nfunction friendOnline(status) {\n  if (status) {\n    return '#2ECC71';\n  } else {\n    return '#E74C3C';\n  }\n}\n\nconst FriendList = ({ friends }) => {\n  return (\n    <div class={s.friends}>\n      <ul class={s.friendlist}>\n        {friends.map(({ id, avatar, name, isOnline }) => (\n          <li class={s.item} key={id}>\n            <span\n              class={s.status}\n              style={{ color: friendOnline(isOnline) }}\n            >\n              {' '}\n              ●\n            </span>\n            <img\n              class={s.avatar}\n              src={avatar}\n              alt={name}\n              width=\"48\"\n            />\n            <p class={s.name}>{name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      isOnline: PropTypes.bool,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nFriendList.defaultProps = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/1623/1623681.svg',\n  name: 'User name',\n  isOnline: false,\n};\n\nexport default FriendList;\n","import s from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nfunction upperFirstLetter(string) {\n  let newStr = string[0].toUpperCase() + string.slice(1);\n  return newStr;\n}\nconst TransactionHistory = ({ items }) => {\n  return (\n    <div class={s.transTable}>\n      <table class=\"transaction-history\">\n        <thead class={s.table}>\n          <tr>\n            <th>TYPE</th>\n            <th>AMOUNT</th>\n            <th>CURRENCY</th>\n          </tr>\n        </thead>\n        <tbody class={s.tableBody}>\n          {items.map(({ id, type, amount, currency }) => (\n            <tr key={id}>\n              <td class={s.tableData}>{upperFirstLetter(type)}</td>\n              <td class={s.tableData}>{amount}</td>\n              <td class={s.tableData}>{currency}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  amount: PropTypes.string.isRequired,\n      currency: PropTypes.string,\n   }),\n  ).isRequired,\n};\nTransactionHistory.defaultProps = {\n  type: 'Type',\n  currency: 'Currency',\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile/Profile';\nimport user from './data/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './data/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './data/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\n\nfunction App() {\n        return (\n            <div className=\"App\">\n                <Profile\n                    name={user.name}\n                    tag={user.tag}\n                    location={user.location}\n                    avatar={user.avatar}\n                    stats={user.stats}\n                />\n\n                <Statistics title=\"Upload stats\" stats={statisticalData} />\n                <Statistics stats={statisticalData} />\n                <FriendList friends={friends} />\n\n                <TransactionHistory items={transactions} />\n            </div>\n        );\n    }\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ModernNormalize from 'react-modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ModernNormalize>\n      <App />\n    </ModernNormalize>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}